name: Release

# mainブランチへのPushまたは手動実行がトリガー
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            extension: ""
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            extension: ""
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            extension: ".exe"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Install Windows cross tools
        if: contains(matrix.target, 'windows')
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y mingw-w64

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          profile: minimal

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build binary for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary for ${{ matrix.target }}
        run: |
          mv target/${{ matrix.target }}/release/wxbeacon2http${{ matrix.extension }} ./wxbeacon2http-${{ matrix.target }}${{ matrix.extension }}

      - name: Upload artifact for ${{ matrix.target }}
        uses: actions/upload-artifact@v4
        with:
          name: wxbeacon2http-${{ matrix.target }}
          path: wxbeacon2http-${{ matrix.target }}${{ matrix.extension }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_tag: ${{ steps.set_tag.outputs.release_tag }}
    steps:
      - name: Set release tag (CalVer)
        id: set_tag
        run: echo "::set-output name=release_tag::$(date +'%Y.%m.%d')"
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.release_tag }}
          release_name: Release ${{ steps.set_tag.outputs.release_tag }}
          draft: false
          prerelease: false

  upload_release:
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            extension: ""
          - target: aarch64-unknown-linux-gnu
            extension: ""
          - target: x86_64-pc-windows-gnu
            extension: ".exe"
    steps:
      - name: Download artifact for ${{ matrix.target }}
        uses: actions/download-artifact@v4
        with:
          name: wxbeacon2http-${{ matrix.target }}

      - name: Upload release asset for ${{ matrix.target }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: wxbeacon2http-${{ matrix.target }}/wxbeacon2http-${{ matrix.target }}${{ matrix.extension }}
          asset_name: wxbeacon2http-${{ matrix.target }}${{ matrix.extension }}
          asset_content_type: application/octet-stream
